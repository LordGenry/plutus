load(
    "@io_tweag_rules_haskell//haskell:haskell.bzl",
    "haskell_import",
    "haskell_library",
    "haskell_test",
)

haskell_packages = [
    "base",
    "containers",
    "mtl",
    "template-haskell",
    "transformers",
    "lens",
]

test_packages = [
    "base",
    "containers",
    "hedgehog",
    "tasty",
    "tasty-hedgehog",
    "text",
    "template-haskell",
]

[
    haskell_import(name = name)
    for name in (list(depset(haskell_packages + test_packages)))
]

haskell_library(
    name = "plutus-use-cases",
    srcs = glob([
        "src/**/*.hs",
    ]),
    compiler_flags = [
        "-XExplicitForAll",
        "-XScopedTypeVariables",
        "-XDeriveGeneric",
        "-XStandaloneDeriving",
        "-XDeriveLift",
        "-XGeneralizedNewtypeDeriving",
        "-XDeriveFunctor",
        "-XDeriveFoldable",
        "-XDeriveTraversable",
    ],
    src_strip_prefix = "src",
    deps = [":" + name for name in haskell_packages] + [
        "//language-plutus-core:language-plutus-core",
        "//plutus-tx:plutus-tx",
        "//wallet-api:wallet-api",
        "//plutus-tx-plugin:plutus-tx-plugin",
    ],
)
haskell_test(
    name = "plutus-use-cases-test",
    srcs = glob([
        "test/**/*.hs",
        "test/Spec.hs"
    ]),
    src_strip_prefix = "test",
    visibility = ["//visibility:public"],
    deps = [":" + name for name in test_packages] + [
        "//plutus-tx-plugin:plutus-tx-plugin",
        "//plutus-tx:plutus-tx",
        "//wallet-api:wallet-api",
        ":plutus-use-cases",
    ],
)

load("//:sh_inline_test.bzl", "sh_inline_test")

sh_inline_test(
    name = "hlint",
    script = "hlintTest.sh .",
    data = glob(["**/*.hs"], exclude = ["**/.stack-work/**"]),
    deps = ["//:hlint_lib"],
)

sh_inline_test(
    name = "stylish",
    script = "stylishHaskellTest.sh plutus-use-cases",
    data = glob(["**/*.hs"], exclude = ["**/.stack-work/**"]),
    deps = ["//:stylish_haskell_lib"],
)
